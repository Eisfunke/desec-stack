input {
  tcp {
    port => 5000
    type => syslog
  }
}

filter {
  if "desec/www" in [message] {

    grok {
#      match => [ "message" , "\<%{NUMBER:addtag1}\> %{SYSLOGBASE} %{DATA:category}\[%{NUMBER:addtag2}\]\: %{COMBINEDAPACHELOG}"]
#      match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
      match => [ "message" , "%{DATA:customtag}\: %{COMBINEDAPACHELOG}"]
      overwrite => [ "message" ]
    }

 
#    geoip {
#      source => "clientip"
#      target => "geoip"
#      database => "/etc/logstash/GeoLite2-City.mmdb"
#      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
#      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
#    }
    
    mutate {
      convert => ["response", "integer"]
      convert => ["bytes", "integer"]
      convert => ["responsetime", "float"]
      convert => ["port", "integer"]
#     convert => ["[geoip][coordinates]", "float"]
#     remove_field => ["tags", "_type", "type"]
#     add_tag => ["desec/www"]
      add_field => ["customtag"]
    }

    date {
      match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
      remove_field => [ "timestamp" ]
    }
 
    useragent {
      source => "agent"
    }

  }
}

output {
  elasticsearch { hosts => ["elasticsearch:9200"] }
  stdout { codec => json }
}
